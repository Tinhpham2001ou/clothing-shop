@model IEnumerable<ClothingShop.WEB.Models.Product>
@{
    Layout = "_Layout";
}

@Html.Partial("~/Views/Shared/menu.cshtml")

@{
    ViewData["Title"] = "Trang chủ";
}
<style>
    .swiper-container {
        max-width: 100%;
        overflow: hidden;
    }

    .swiper-slide {
        max-width: 300px; /* Thay đổi giới hạn chiều rộng tùy theo nhu cầu của bạn */
    }

</style>
<div class="mx-20">
    @*carousel*@
    <div id="demo" class="carousel slide" data-ride="carousel">

        <!-- Indicators -->
        <ul class="carousel-indicators">
            <li data-target="#demo" data-slide-to="0" class="active"></li>
            <li data-target="#demo" data-slide-to="1"></li>
            <li data-target="#demo" data-slide-to="2"></li>
        </ul>

        <!-- The slideshow -->
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img src="images/carousel1.png" alt="Los Angeles">
            </div>
            <div class="carousel-item">
                <img src="images/carousel2.png" alt="Chicago">
            </div>
            <div class="carousel-item">
                <img src="images/carousel3.png" alt="New York">
            </div>
        </div>

        <!-- Left and right controls -->
        <a class="carousel-control-prev" href="#demo" data-slide="prev">
            <span class="carousel-control-prev-icon"></span>
        </a>
        <a class="carousel-control-next" href="#demo" data-slide="next">
            <span class="carousel-control-next-icon"></span>
        </a>

    </div>
    <div class="mt-5 grid grid-cols-3 gap-4">
        <div>
            <img src="images/header1.png" alt="Hình ảnh 1">
        </div>
        <div>
            <img src="images/header2.png" alt="Hình ảnh 2">
        </div>
        <div>
            <img src="images//header3.png" alt="Hình ảnh 3">
        </div>
    </div>

    @*List category*@
    <div>
        <p class="text-gray-700 text-center text-2xl font-semibold py-4 px-3">Danh mục sản phẩm</p>
        <div class="flex flex-wrap">
            @foreach (var category in @ViewBag.Categories)
            {
                <div class="bg-gray-100 border border-gray-300 rounded-md p-2 m-2 cursor-pointer category-item" data-category-id="@category.Id">
                    @category.CategoryName
                </div>
            }
        </div>

    </div>

    @*image1*@
    <img src="images/image-home-1.png" class="mt-10"/>

    @*List product*@
    <div class="container mx-auto mt-4">
        <div class="flex items-center justify-between mb-4">
            <h1 class="text-2xl font-semibold">BỘ SƯU TẬP ÁO NAM</h1>
            <form asp-controller="Product" asp-action="Index" method="get" id="sortForm">
                <label for="sortOrder">Sắp xếp theo giá:</label>
                <select name="sortOrder" id="sortOrder" class="bg-white border border-gray-300 rounded-md px-3 py-2">
                    <option value="def" @(ViewBag.SortOrder == "def" ? "selected" : "")>Mặc định</option>
                    <option value="asc" @(ViewBag.SortOrder == "asc" ? "selected" : "")>Tăng dần</option>
                    <option value="desc" @(ViewBag.SortOrder == "desc" ? "selected" : "")>Giảm dần</option>
                </select>
            </form>
        </div>
        @if (Model != null && Model.Any())
        {
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
                @foreach (var item in Model)
                {
                    <a href="@Url.Action("ProductDetails", "Product", new { id = item.Id })">
                        <div class="bg-white rounded-lg shadow-lg p-4 relative group cursor-pointer">
                        <img src="@(item.Images.FirstOrDefault()?.Link ?? "images/default-image.jpg")" alt="@item.ProductName" class="w-full h-auto mb-2">
                         <h2 class="text-sm font-semibold mb-2 h-12">@Html.DisplayFor(modelItem => item.ProductName)</h2>
                        <ul class="mt-2 space-y-1">
                            <li><span class="font-semibold h-3">Category:</span> @Html.DisplayFor(modelItem => item.Category.CategoryName)</li>
                            <li><span class="font-semibold">Trademark:</span> @Html.DisplayFor(modelItem => item.Trademark.Name)</li>
                            <li>
                                <span class="text-base text-red-700">@string.Format("{0:N0}", item.Price)</span>
                                @if (item.OldPrice.HasValue)
                                {
                                    <span class="ml-7 text-base text-gray-500 line-through italic">@string.Format("{0:N0}", item.OldPrice)</span>
                                }
                            </li>
                        </ul>
                        <div class="opacity-0 group-hover:opacity-100 absolute inset-0 bg-white border border-gray-300 p-4">
                            <!-- Model nhỏ -->
                            <p>@item.Description</p>
                        </div>
                    </div>
                    </a>
                }
            </div>
            <div class="mt-5 flex items-center justify-center">
                <a href="/products/list?page=1" class="bg-gray-300 text-white font-bold py-2 px-4 rounded hover:bg-red-500">
                Xem tất cả
            </a>
        </div>
        }
        else
        {
            <p class="text-center text-gray-500">Danh sách trống!!!</p>
        }

    </div>

    @*image 2*@
    <img src="images/image-home-2.png" class="mt-10 mb-10" />
    <h1 class="text-2xl font-semibold">BỘ SƯU TẬP QUẦN NAM</h1>
    <hr class="mt-2"/>
    <div class="swiper-container">
        <div class="swiper-wrapper">
            @foreach (var item in @ViewBag.SportShorts)
            {
                <div class="swiper-slide cursor-pointer">
                    <a href="@Url.Action("ProductDetails", "Product", new { id = item.Id })" class="hover:no-underline">
                        <img src="images/shorts-default.png" alt="@item.ProductName" class="w-full h-auto mb-2">
                        <h2>@item.ProductName</h2>
                        <span class="text-base text-red-700">@string.Format("{0:N0}", item.Price) <span class="text-red font-semibold">VNĐ</span></span>
                    </a>
                </div>
            }
            <div class="swiper-slide cursor-pointer">
                <div class="mt-32 p-3 rounded-lg transition duration-300 ease-in-out">
                    <a href="/products/list?page=1" class="font-semibold">Xem tất cả</a>
                </div>
            </div>
        </div>

        <!-- Nút điều hướng bên trái -->
        <div class="swiper-button-prev-2"></div>
        <!-- Nút điều hướng bên phải -->
        <div class="swiper-button-next-2"></div>
    </div>

    <script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
    <script>
        var swiper = new Swiper('.swiper-container', {
            slidesPerView: 3,
            spaceBetween: 20,
            navigation: {
                nextEl: '.swiper-button-next-2',
                prevEl: '.swiper-button-prev-2',
            },
        });
    </script>


</div>



<script>
    document.getElementById("sortOrder").addEventListener("change", function () {
        // Lấy giá trị "sortOrder" từ select box
        const sortOrder = document.getElementById("sortOrder").value;

        // Lấy giá trị "categoryId" từ URL hiện tại
        const urlSearchParams = new URLSearchParams(window.location.search);
        const currentCategoryId = urlSearchParams.get('categoryId');

        // Tạo URL mới với tham số "sortOrder" và giữ lại "categoryId" nếu có
        let newUrl = window.location.pathname + '?sortOrder=' + sortOrder;
        if (currentCategoryId !== null) {
            newUrl += '&categoryId=' + currentCategoryId;
        }

        // Chuyển hướng đến URL mới
        window.location.href = newUrl;
    });


    // Chọn tất cả các phần tử có class "category-item"
    const categoryItems = document.querySelectorAll('.category-item');

    // Gắn sự kiện click cho mỗi phần tử
    categoryItems.forEach(item => {
        item.addEventListener('click', () => {
            // Lấy giá trị "data-category-id" từ phần tử
            const categoryId = item.getAttribute('data-category-id');

            // Lấy giá trị "sortOrder" từ URL hiện tại
            const urlSearchParams = new URLSearchParams(window.location.search);
            const currentSortOrder = urlSearchParams.get('sortOrder');

            // Kiểm tra xem có sortOrder trong URL không
            if (currentSortOrder !== null) {
                // Kiểm tra xem có categoryId trong URL không
                const currentCategoryId = urlSearchParams.get('categoryId');
                if (currentCategoryId !== null) {
                    // Nếu đã có categoryId, chỉ cần cập nhật giá trị
                    urlSearchParams.set('categoryId', categoryId);
                } else {
                    // Nếu chưa có categoryId, thêm categoryId vào URL mới
                    urlSearchParams.append('categoryId', categoryId);
                }
                // Tạo URL mới với thay đổi
                const newUrl = window.location.pathname + '?' + urlSearchParams.toString();
                // Chuyển hướng đến URL mới
                window.location.href = newUrl;
            } else {
                // Nếu không có sortOrder, chỉ thêm categoryId vào URL mới
                const newUrl = window.location.pathname + '?categoryId=' + categoryId;
                // Chuyển hướng đến URL mới
                window.location.href = newUrl;
            }
        });
    });
</script>




@Html.Partial("~/Views/Shared/footer.cshtml")